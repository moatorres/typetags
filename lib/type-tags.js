export const TypeTags = Object.freeze({
  AggregateError: '[object Error]',
  Arguments: '[object Arguments]',
  Array: '[object Array]',
  ArrayBuffer: '[object ArrayBuffer]',
  AsyncFunction: '[object AsyncFunction]',
  Atomics: '[object Atomics]',
  BigInt: '[object BigInt]',
  BigInt64Array: '[object BigInt64Array]',
  BigUint64Array: '[object BigUint64Array]',
  Boolean: '[object Boolean]',
  DataView: '[object DataView]',
  Date: '[object Date]',
  Error: '[object Error]',
  EvalError: '[object Error]',
  FinalizationRegistry: '[object FinalizationRegistry]',
  Float32Array: '[object Float32Array]',
  Float64Array: '[object Float64Array]',
  Function: '[object Function]',
  Generator: '[object Generator]',
  GeneratorFunction: '[object GeneratorFunction]',
  GlobalThis: Object.prototype.toString.call(globalThis),
  Infinity: '[object Number]' || 'Infinity',
  Int8Array: '[object Int8Array]',
  Int16Array: '[object Int16Array]',
  Int32Array: '[object Int32Array]',
  // InternalError: '[object Error]', // non-standard
  Intl: '[object Intl]',
  ['Intl.Collator']: '[object Intl.Collator]',
  ['Intl.DateTimeFormat']: '[object Intl.DateTimeFormat]',
  ['Intl.ListFormat']: '[object Intl.ListFormat]',
  ['Intl.Locale']: '[object Intl.Locale]',
  ['Intl.NumberFormat']: '[object Intl.NumberFormat]',
  ['Intl.PluralRules']: '[object Intl.PluralRules]',
  ['Intl.RelativeTimeFormat']: '[object Intl.RelativeTimeFormat]',
  JSON: '[object JSON]',
  Map: '[object Map]',
  Math: '[object Math]',
  NaN: '[object Number]' || 'NaN',
  Null: '[object Null]',
  Number: '[object Number]',
  Object: '[object Object]',
  Process: '[object process]',
  Promise: '[object Promise]',
  RangeError: '[object Error]',
  ReferenceError: '[object Error]',
  RegExp: '[object RegExp]',
  Set: '[object Set]',
  SharedArrayBuffer: '[object SharedArrayBuffer]',
  String: '[object String]',
  Symbol: '[object Symbol]',
  SyntaxError: '[object Error]',
  TypeError: '[object Error]',
  Uint8Array: '[object Uint8Array]',
  Uint8ClampedArray: '[object Uint8ClampedArray]',
  Uint16Array: '[object Uint16Array]',
  Uint32Array: '[object Uint32Array]',
  Undefined: '[object Undefined]',
  URIError: '[object Error]',
  WeakMap: '[object WeakMap]',
  WeakRef: '[object WeakRef]',
  WeakSet: '[object WeakSet]',
  WebAssembly: '[object WebAssembly]',
  ['WebAssembly.Module']: '[object WebAssembly.Module]',
  ['WebAssembly.Global']: '[object WebAssembly.Global]',
  ['WebAssembly.Instance']: '[object WebAssembly.Instance]',
  ['WebAssembly.Memory']: '[object WebAssembly.Memory]',
  ['WebAssembly.Table']: '[object WebAssembly.Table]',
  ['WebAssembly.CompileError']: '[object Error]',
  ['WebAssembly.LinkError']: '[object Error]',
  ['WebAssembly.RuntimeError']: '[object Error]',
  Window: '[object Window]',
  Worker: '[object Worker]',
})

export const IntlEnum = [
  '[object Intl]',
  '[object Intl.Collator]',
  '[object Intl.DateTimeFormat]',
  '[object Intl.ListFormat]',
  '[object Intl.Locale]',
  '[object Intl.NumberFormat]',
  '[object Intl.PluralRules]',
  '[object Intl.RelativeTimeFormat]',
]

export const WasmEnum = [
  '[object WebAssembly]',
  '[object WebAssembly.Module]',
  '[object WebAssembly.Global]',
  '[object WebAssembly.Instance]',
  '[object WebAssembly.Memory]',
  '[object WebAssembly.Table]',
  '[object Error]',
]

export const BigIntEnum = [
  '[object BigInt]',
  '[object BigInt64Array]',
  '[object BigUint64Array]',
]

export const NaNEnum = ['NaN', '[object Number]']

export const InfinityEnum = ['Infinity', '[object Number]']
