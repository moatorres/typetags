import { TypeTags, IntlEnum, WasmEnum, BigIntEnum } from './type-tags'

const tags = Object.values(TypeTags)
const toString = (v) => Object.prototype.toString.call(v)
const isFunction = (v) => typeof v === 'function'
const makePredicate = (name) => (v) => v === TypeTags[name]

export const hasToStringMethod = (v) => !!v.toString && isFunction(v.toString)

export const isDefaultTag = (str) => tags.includes(str)

export const hasDefaultTag = (v) =>
  isFunction(v.toString) &&
  isDefaultTag(v.toString()) &&
  isDefaultTag(toString(v))

export const isAggregateErrorTag = makePredicate('AggregateError')
export const isArgumentsTag = makePredicate('Arguments')
export const isArrayTag = makePredicate('Array')
export const isArrayBufferTag = makePredicate('ArrayBuffer')
export const isAsyncFunctionTag = makePredicate('AsyncFunction')
export const isAtomicsTag = makePredicate('Atomics')
export const isBigIntTag = (str) => BigIntEnum.includes(str)
export const isBigInt64ArrayTag = makePredicate('BigInt64Array')
export const isBigUint64ArrayTag = makePredicate('BigUint64Array')
export const isBooleanTag = makePredicate('Boolean')
export const isDataViewTag = makePredicate('DataView')
export const isDateTag = makePredicate('Date')
export const isErrorTag = makePredicate('Error')
export const isEvalErrorTag = makePredicate('EvalError')
export const isFinalizationRegistryTag = makePredicate('FinalizationRegistry')
export const isFloat32ArrayTag = makePredicate('Float32Array')
export const isFloat64ArrayTag = makePredicate('Float64Array')
export const isFunctionTag = makePredicate('Function')
export const isGeneratorTag = makePredicate('Generator')
export const isGeneratorFunctionTag = makePredicate('GeneratorFunction')
export const isGlobalThisTag = makePredicate('GlobalThis')
export const isInfinityTag = makePredicate('Infinity')
export const isInt8ArrayTag = makePredicate('Int8Array')
export const isInt16ArrayTag = makePredicate('Int16Array')
export const isInt32ArrayTag = makePredicate('Int32Array')
export const isIntlTag = (str) => IntlEnum.includes(str)
export const isIntlCollatorTag = makePredicate('Intl.Collator')
export const isIntlDateTimeFormatTag = makePredicate('Intl.DateTimeFormat')
export const isIntlListFormatTag = makePredicate('Intl.ListFormat')
export const isIntlLocaleTag = makePredicate('Intl.Locale')
export const isIntlNumberFormatTag = makePredicate('Intl.NumberFormat')
export const isIntlPluralRulesTag = makePredicate('Intl.PluralRules')
export const isIntlRelativeTimeFormatTag = makePredicate(
  'Intl.RelativeTimeFormat'
)
export const isJsonTag = makePredicate('JSON')
export const isMapTag = makePredicate('Map')
export const isMathTag = makePredicate('Math')
export const isNaNTag = makePredicate('NaN')
export const isNullTag = makePredicate('Null')
export const isNumberTag = makePredicate('Number')
export const isObjectTag = makePredicate('Object')
export const isProcessTag = makePredicate('Process')
export const isPromiseTag = makePredicate('Promise')
export const isRangeErrorTag = makePredicate('RangeError')
export const isReferenceErrorTag = makePredicate('ReferenceError')
export const isRegExpTag = makePredicate('RegExp')
export const isSetTag = makePredicate('Set')
export const isSharedArrayBufferTag = makePredicate('SharedArrayBuffer')
export const isStringTag = makePredicate('String')
export const isSymbolTag = makePredicate('Symbol')
export const isSyntaxErrorTag = makePredicate('SyntaxError')
export const isTypeErrorTag = makePredicate('TypeError')
export const isUint8ArrayTag = makePredicate('Uint8Array')
export const isUint8ClampedArrayTag = makePredicate('Uint8ClampedArray')
export const isUint16ArrayTag = makePredicate('Uint16Array')
export const isUint32ArrayTag = makePredicate('Uint32Array')
export const isUndefinedTag = makePredicate('Undefined')
export const isURIErrorTag = makePredicate('URIError')
export const isWeakMapTag = makePredicate('WeakMap')
export const isWeakRefTag = makePredicate('WeakRef')
export const isWeakSetTag = makePredicate('WeakSet')
export const isWasmTag = (str) => WasmEnum.includes(str)
export const isWasmCompileErrorTag = makePredicate('WebAssembly.CompileError')
export const isWasmGlobalTag = makePredicate('WebAssembly.Global')
export const isWasmInstanceTag = makePredicate('WebAssembly.Instance')
export const isWasmLinkErrorTag = makePredicate('WebAssembly.LinkError')
export const isWasmMemoryTag = makePredicate('WebAssembly.Memory')
export const isWasmModuleTag = makePredicate('WebAssembly.Module')
export const isWasmRuntimeErrorTag = makePredicate('WebAssembly.RuntimeError')
export const isWasmTableTag = makePredicate('WebAssembly.Table')
export const isWindowTag = makePredicate('Window')
export const isWorkerTag = makePredicate('Worker')
